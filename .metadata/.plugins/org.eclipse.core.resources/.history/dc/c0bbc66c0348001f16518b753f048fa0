package com.itwillbs.controller;

import java.io.IOException;
import java.util.ArrayList;

import com.itwillbs.dao.BoardDAO;
import com.itwillbs.domain.BoardDTO;
import com.itwillbs.service.BoardService;

import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

public class BoardController extends HttpServlet{

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		doProcess(req, resp);
	}

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		doProcess(req, resp);
	}
	protected void doProcess(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String sPath = request.getServletPath();
		System.out.println("가상 주소 : " + sPath);
		
		if(sPath.equals("/write.bo")) {
			System.out.println("write.bo 가상 주소 일치 ");
			
			RequestDispatcher dispatcher = request.getRequestDispatcher("board/write.jsp");
			dispatcher.forward(request, response);
		}//if write.bo
		if(sPath.equals("/writePro.bo")) {
			System.out.println("writePro.bo 가상 주소 일치 ");
			BoardService boardService = new BoardService();
			
			if(boardService.insertBoard(request)) {
				response.sendRedirect("main.me");
			}else {
				response.sendRedirect("write.bo");
			}
		}//if writePro.bo
		if(sPath.equals("/list.bo")){
			System.out.println("list.bo 가상 주소 일치 ");
			BoardService boardService = new BoardService();
			ArrayList<BoardDTO> boardList = boardService.getBoardList();
			request.setAttribute("boardList", boardList);
			
			RequestDispatcher dispatcher = request.getRequestDispatcher("board/list.jsp");
			dispatcher.forward(request, response);
		}//if list.bo
		if(sPath.equals("/content.bo")) {
			System.out.println("context.bo 가상 주소 일치 ");
			boolean boardCheck = false;
			BoardService boardService = new BoardService();
			BoardDTO board = boardService.getBoard(Integer.parseInt(request.getParameter("num")));
			if(board != null) {
				board.setReadcount(board.getReadcount()+1);
				if(!boardService.updateReadCount(board)) boardCheck = true;
				request.setAttribute("boardDTO", board);
			}else boardCheck = true;
			
			if(boardCheck){
				RequestDispatcher dispatcher = request.getRequestDispatcher("board/list.jsp");
				dispatcher.forward(request, response);
			}
			RequestDispatcher dispatcher = request.getRequestDispatcher("board/context.jsp");
			dispatcher.forward(request, response);
		}//if context.bo
	}
}
